@page "/top"
@inject HttpClient Http

<h1>Top stories</h1>

<p>This component fetches top stories from Hacker News.</p>

@if (posts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Comments</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var post in posts)
            {
                <tr>
                    <td><a target="_blank" href="https://news.ycombinator.com/item?id=@post.id">@post.id</a></td>
                    <td><a target="_blank" href="@post.data.url">@post.data.title</a></td>
                    <td>@post.data.GetComments()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    public class PostData {
        public string by { get; set; }
        public int descendants { get; set; }
        public int id { get; set; }
        public int[] kids { get; set; }
        public int score { get; set; }
        public int time { get; set; }
        public string title { get; set; }
        public string type { get; set; }
        public string url { get; set; }
        public int GetComments() {
            if (kids == null)
                return 0;
            return kids.Count();
        }
    }

    List<Post> posts = new List<Post>();

    protected override async Task OnInitializedAsync()
    {
        int[] ids = await Http.GetJsonAsync<int[]>("https://hacker-news.firebaseio.com/v0/topstories.json?print=pretty");
        for (var i = 0; i < 20; i++) {
        
            var data = await Http.GetJsonAsync<PostData>("https://hacker-news.firebaseio.com/v0/item/" + ids[i] + ".json?print=pretty");
            
            if (data.GetComments() >= 10)
                posts.Add(new Post(ids[i], data));
        }
        
        posts.Sort(delegate(Post p1, Post p2) { return p2.data.GetComments().CompareTo(p1.data.GetComments()); });
    }
    
    

    public class Post
    {
        public int id { get; set; }
        public PostData data { get; set; }
        
        public Post(int id, PostData data) {
            this.id = id;
            this.data = data;
        }
    }
}
